{"ast":null,"code":"var _jsxFileName = \"/Users/julianneaguilar/Desktop/web dev/assignment-4-juliannea/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles/App.css';\nimport PokemonDisplay from './components/PokemonDisplay';\nimport GuessInput from './components/GuessInput';\nimport GuessCounter from './components/GuessCounter';\nimport { useState, createContext } from 'react';\n\n//----Creating global context to hold all info want to pass fown---//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  // Hint* Create a game state here and pass it along to the components as needed.\n  //       Think about how you want to model your data to represent the game state.\n\n  //current pokemon to guess state \n  const [currentPokemon, setCurrentPokemon] = useState(\"\");\n  const [guess, setGuess] = useState(\"\");\n  const [listPos, setListPos] = useState(0);\n\n  //states for guess balls\n  const [firstBall, setFirstBall] = useState(true);\n  const [secBall, setSecBall] = useState(true);\n  const [thirdBall, setThirdBall] = useState(true);\n  const [resetGame, setResetGame] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        firstBall,\n        setFirstBall,\n        secBall,\n        setSecBall,\n        thirdBall,\n        setThirdBall,\n        guess,\n        setGuess\n      },\n      children: [/*#__PURE__*/_jsxDEV(PokemonDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GuessCounter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GuessInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IpPEOVqKLxhIMGRPdIDbNmYJ0wY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","PokemonDisplay","GuessInput","GuessCounter","useState","createContext","jsxDEV","_jsxDEV","AppContext","App","_s","currentPokemon","setCurrentPokemon","guess","setGuess","listPos","setListPos","firstBall","setFirstBall","secBall","setSecBall","thirdBall","setThirdBall","resetGame","setResetGame","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/julianneaguilar/Desktop/web dev/assignment-4-juliannea/src/App.js"],"sourcesContent":["import React from 'react';\nimport './styles/App.css';\nimport PokemonDisplay from './components/PokemonDisplay';\nimport GuessInput from './components/GuessInput';\nimport GuessCounter from './components/GuessCounter';\nimport { useState, createContext } from 'react';\n\n//----Creating global context to hold all info want to pass fown---//\nexport const AppContext = createContext();\n\nfunction App() {\n  // Hint* Create a game state here and pass it along to the components as needed.\n  //       Think about how you want to model your data to represent the game state.\n  \n  //current pokemon to guess state \n  const [currentPokemon, setCurrentPokemon] = useState(\"\");\n  const [guess, setGuess] = useState(\"\");\n\n  const [listPos, setListPos] = useState(0);\n\n  //states for guess balls\n  const [firstBall, setFirstBall] = useState(true);\n  const [secBall, setSecBall] = useState(true);\n  const [thirdBall, setThirdBall] = useState(true);\n  const [resetGame, setResetGame] = useState(false);\n\n  \n\n  return (\n    <div className=\"App\">\n    <AppContext.Provider value={{\n      firstBall, \n      setFirstBall, \n      secBall, \n      setSecBall,\n      thirdBall, \n      setThirdBall,\n      guess,\n      setGuess\n      }}>\n      <PokemonDisplay/>\n      <GuessCounter/>\n      <GuessInput/>\n\n    </AppContext.Provider>\n     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,QAAQ,EAAEC,aAAa,QAAQ,OAAO;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,UAAU,gBAAGH,aAAa,CAAC,CAAC;AAEzC,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;;EAEA;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAIjD,oBACEG,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBnB,OAAA,CAACC,UAAU,CAACmB,QAAQ;MAACC,KAAK,EAAE;QAC1BX,SAAS;QACTC,YAAY;QACZC,OAAO;QACPC,UAAU;QACVC,SAAS;QACTC,YAAY;QACZT,KAAK;QACLC;MACA,CAAE;MAAAY,QAAA,gBACFnB,OAAA,CAACN,cAAc;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjBzB,OAAA,CAACJ,YAAY;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACfzB,OAAA,CAACL,UAAU;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AAEV;AAACtB,EAAA,CAtCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}